    pipeline {
        agent {
        node {
            label 'AGENT'
            
        }
    }
    environment { 
            packageVersion = ''
            nexusUrl = '172.31.87.249:8081'
        }
    options {
        // Timeout counter starts AFTER agent is allocated
        timeout(time: 1 , unit: 'HOURS')
        disableConcurrentBuilds()
    }
     parameters {
        // string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')

        // text(name: 'BIOGRAPHY', defaultValue: '', description: 'Enter some information about the person')

        booleanParam(name: 'Deploy', defaultValue: false, description: 'Toggle this value')

        // choice(name: 'CHOICE', choices: ['One', 'Two', 'Three'], description: 'Pick something')

        // password(name: 'PASSWORD', defaultValue: 'SECRET', description: 'Enter a password')
    }
    
        stages {
            stage('Get the version') {
                steps {
                    script { //groovy script
                        def packageJson = readJSON file: 'package.json' //def is variable initialisation
                        packageVersion = packageJson.version
                        echo "application version: $packageVersion"
                    }
                }
            }
            
        
        
        }

        post { 
            always { 
                echo 'I will always say Hello again!'
                deleteDir()
            }
        }
    }