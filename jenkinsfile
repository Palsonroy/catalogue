    pipeline {
        agent {
        node {
            label 'AGENT-1'
            
        }
    }
    environment { 
            packageVersion = ''
        }
    options {
        // Timeout counter starts AFTER agent is allocated
        timeout(time: 1 , unit: 'HOURS')
        disableConcurrentBuilds()
    }
    //  parameters {
    //     string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')

    //     text(name: 'BIOGRAPHY', defaultValue: '', description: 'Enter some information about the person')

    //     booleanParam(name: 'TOGGLE', defaultValue: true, description: 'Toggle this value')

    //     choice(name: 'CHOICE', choices: ['One', 'Two', 'Three'], description: 'Pick something')

    //     password(name: 'PASSWORD', defaultValue: 'SECRET', description: 'Enter a password')
    // }
    
        stages {
            stage('Get the version') {
                steps {
                    script { //groovy script
                        def packageJson = readJSON file: 'package.json' //def is variable initialisation
                        packageVersion = packageJson.version
                        echo "application version: $packageVersion"
                    }
                }
            }
            //npm install to install dependencies
             stage('install dependencies') {
                steps {
                    sh """
                        npm install
                    """
                }
            }
            stage('Example Deploy') {
                when {
                    branch 'production'
                }
                steps {
                    echo 'Deploying'
                }
            }
            stage('greeting') {
                steps {
                    sh """
                        echo "Here i wrote shell script"
                        env
                    """
                }
            }
            stage('Example') {
                steps {
                     sh """
                        echo "Hello ${params.PERSON}"

                        echo "Biography: ${params.BIOGRAPHY}"

                        echo "Toggle: ${params.TOGGLE}"

                        echo "Choice: ${params.CHOICE}"

                        echo "Password: ${params.PASSWORD}"
                     """
            }
        }
        
        
        }

        post { 
            always { 
                echo 'I will always say Hello again!'
            }
        }
    }